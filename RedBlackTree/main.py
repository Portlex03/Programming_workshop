from redblacktree import RedBlackTree
import streamlit as st

st.set_page_config(
    page_title="RedBlackTree",
    page_icon="üå≤"
)

if 'values_list' not in st.session_state:
    st.session_state.values_list = set()

if 'tree' not in st.session_state:
    st.session_state.tree = RedBlackTree()

if 'image' not in st.session_state:
    st.session_state.image = None

st.title('üå≤:red[–ö—Ä–∞—Å–Ω–æ] - :gray[—á—ë—Ä–Ω–æ–µ] :green[–¥–µ—Ä–µ–≤–æ]üå≤')

st.subheader('üî¢ –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –≤—Å—Ç–∞–≤–∏—Ç—å:')

st.text_input(
    '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞:',
    label_visibility='collapsed',
    placeholder='–ü—Ä: 1 2 3 4 5',
    key='new_values'
)

sidebar = st.sidebar
sidebar.title('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ä–µ–≤–∞')

font_size = sidebar.selectbox(
    label='–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ —É–∑–ª–æ–≤',
    options=range(12, 19)
)

node_size = sidebar.slider(
    label='–†–∞–∑–º–µ—Ä —É–∑–ª–æ–≤',
    min_value=500,
    max_value=3500,
    step=100,
    value=1000
)

figsize = sidebar.selectbox(
    label='–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
    options=range(5, 13)
)

margins = sidebar.slider(
    label='–†–∞–∑–º–µ—Ä —Ä—ë–±–µ—Ä',
    min_value=0.05,
    max_value=0.7,
    step=0.05,
    value=0.4
)

try:
    new_values = set([
        int(value) for value in 
            st.session_state.new_values.split()
    ])
except ValueError as e:
    new_values = None
    st.error(f'‚õîÔ∏è–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥: {e}')

if st.button('üéØ–î–æ–±–∞–≤–∏—Ç—å'):
    if not new_values:
        st.error('‚õîÔ∏è–í—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–± –æ–Ω–æ –¥–æ–±–∞–≤–∏–ª–æ—Å—å')
    elif len(new_values - st.session_state.values_list) == 0:
        st.warning('‚ö†Ô∏è–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ—Ç. –í –¥–µ—Ä–µ–≤–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–∏–ª–æ—Å—å')
    else:
        new_values -= st.session_state.values_list

        st.session_state.tree.add_nodes_from(list(new_values))

        st.session_state.values_list = \
            st.session_state.values_list.union(new_values)

if st.session_state.values_list:

    output = [
        node.value for node in 
            st.session_state.tree._nodes if node.value]

    st.subheader(f'‚úÖ–£–∑–ª—ã –¥–µ—Ä–µ–≤–∞: {output}')

    st.subheader('üìà–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è:')

    if st.button('–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ä–µ–≤–æ') or st.session_state.image:
        st.session_state.image = st.session_state.tree.image(
            font_size=font_size,
            node_size=node_size,
            figsize=(figsize, figsize),
            margins=margins
        )
        st.pyplot(st.session_state.image)

        if st.button('–û—á–∏—Å—Ç–∏—Ç—å –¥–µ—Ä–µ–≤–æ'):
            st.session_state.clear()
            st.rerun()
